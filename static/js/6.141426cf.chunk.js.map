{"version":3,"sources":["unauthenticated-app/login.tsx","unauthenticated-app/register.tsx","assets/logo.svg","assets/left.svg","assets/right.svg","unauthenticated-app/index.tsx"],"names":["LoginScreen","onError","login","useAuth","useAsync","undefined","throwOnError","run","isLoading","handleSubmit","values","a","onFinish","Item","name","rules","required","message","placeholder","type","id","LongButton","loading","htmlType","RegisterScreen","register","cpassword","password","Error","UnauthenticatedApp","useDocumentTitle","useState","isRegister","setIsRegister","error","setError","Container","Header","Background","ShadowCard","Title","onClick","styled","Button","h2","div","left","right","header","logo","Card"],"mappings":"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","file":"static/js/6.141426cf.chunk.js","sourcesContent":["import { useAuth } from 'context/auth-context';\r\nimport { Form, Input } from 'antd';\r\nimport { LongButton } from 'unauthenticated-app';\r\nimport { useAsync } from 'utils/use-async';\r\n\r\nexport const LoginScreen = ({ onError }: { onError: (error: Error) => void }) => {\r\n\r\n    const { login } = useAuth()\r\n    const { run, isLoading } = useAsync(undefined, { throwOnError: true })\r\n\r\n    const handleSubmit = async (values: { username: string, password: string }) => {\r\n        try {\r\n            await run(login(values))\r\n        } catch (e) {\r\n            onError(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onFinish={handleSubmit}>\r\n            <Form.Item name='username' rules={[{ required: true, message: '请输入用户名' }]}>\r\n                <Input placeholder=\"请输入用户名\" type=\"text\" id=\"username\" />\r\n            </Form.Item>\r\n            <Form.Item name='password' rules={[{ required: true, message: '请输入密码' }]}>\r\n                <Input placeholder=\"请输入密码\" type=\"password\" id=\"password\" />\r\n            </Form.Item>\r\n            <LongButton loading={isLoading} htmlType='submit' type=\"primary\">登录</LongButton>\r\n        </Form>\r\n    );\r\n};\r\n","import { useAuth } from 'context/auth-context';\r\nimport { Form, Input } from 'antd';\r\nimport { LongButton } from 'unauthenticated-app';\r\nimport { useAsync } from 'utils/use-async';\r\n\r\n\r\nexport const RegisterScreen = ({ onError }: { onError: (error: Error) => void }) => {\r\n\r\n    const { register } = useAuth()\r\n    const { run, isLoading } = useAsync(undefined, { throwOnError: true })\r\n\r\n    const handleSubmit = async ({ cpassword, ...values }: { username: string, password: string, cpassword: string }) => {\r\n        if (cpassword !== values.password) {\r\n            onError(new Error('请确认两次输入的密码相同'))\r\n        } else {\r\n            try {\r\n                await run(register(values))\r\n            } catch (e) {\r\n                onError(e)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Form onFinish={handleSubmit}>\r\n            <Form.Item name='username' rules={[{ required: true, message: '请输入用户名' }]}>\r\n                <Input placeholder=\"请输入用户名\" type=\"text\" id=\"userName\" />\r\n            </Form.Item>\r\n            <Form.Item name='password' rules={[{ required: true, message: '请输入密码' }]}>\r\n                <Input placeholder=\"请输入密码\" type=\"password\" id=\"password\" />\r\n            </Form.Item>\r\n            <Form.Item name='cpassword' rules={[{ required: true, message: '请确认密码' }]}>\r\n                <Input placeholder=\"请确认密码\" type=\"password\" id=\"cpassword\" />\r\n            </Form.Item>\r\n            <LongButton loading={isLoading} htmlType=\"submit\" type='primary'>注册</LongButton>\r\n        </Form>\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.8bb06c97.svg\";","export default __webpack_public_path__ + \"static/media/left.e74de3ec.svg\";","export default __webpack_public_path__ + \"static/media/right.890da620.svg\";","import { useState } from 'react';\nimport { LoginScreen } from './login';\nimport { RegisterScreen } from './register';\nimport { Button, Card, Divider } from 'antd';\nimport styled from '@emotion/styled';\nimport logo from 'assets/logo.svg';\nimport left from 'assets/left.svg';\nimport right from 'assets/right.svg';\nimport { useDocumentTitle } from 'utils';\nimport { ErrorBox } from 'components/lib';\n\nexport default function UnauthenticatedApp() {\n  useDocumentTitle('请登录注册以继续', false);\n\n  const [isRegister, setIsRegister] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  return (\n    <Container>\n      <Header />\n      <Background />\n      <ShadowCard>\n        <Title>{isRegister ? '请注册' : '请登录'}</Title>\n        <ErrorBox error={error} />\n        {isRegister ? (\n          <RegisterScreen onError={setError} />\n        ) : (\n          <LoginScreen onError={setError} />\n        )}\n        <Divider />\n        <Button type=\"link\" onClick={() => setIsRegister(!isRegister)}>\n          {isRegister ? '已有账号了？直接登录' : '没有账号？注册新账号'}\n        </Button>\n      </ShadowCard>\n    </Container>\n  );\n}\n\nexport const LongButton = styled(Button)`\n  width: 100%;\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 2.4rem;\n  color: rgb(94, 108, 132);\n`;\n\nconst Background = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: left bottom, right bottom;\n  background-size: calc(((100vw-40rem) / 2)-3.2rem),\n    calc(((100vw-40rem) / 2)-3.2rem), cover;\n  background-image: url(${left}), url(${right});\n`;\n\nconst Header = styled.header`\n  background: url(${logo}) no-repeat center;\n  padding: 5rem 0;\n  background-size: 8rem;\n  width: 100%;\n`;\n\nconst ShadowCard = styled(Card)`\n  width: 40rem;\n  min-height: 56rem;\n  padding: 3.2rem 4rem;\n  border-radius: 0.3rem;\n  box-sizing: border-box;\n  box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n`;\n"],"sourceRoot":""}